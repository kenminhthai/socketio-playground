{"map":"{\"version\":3,\"sources\":[\"/Users/Kenmintae/Desktop/works/sample2/src/socketBuilder.js\"],\"names\":[\"Socket\",\"server\",\"config\",\"_classCallCheck3\",\"default\",\"this\",\"io\",\"rooms\",\"connected\",\"Array\",\"isArray\",\"clients\",\"_iteratorNormalCompletion\",\"_didIteratorError\",\"_iteratorError\",\"undefined\",\"_step\",\"_iterator\",\"Symbol\",\"iterator\",\"next\",\"done\",\"roomId\",\"value\",\"room\",\"sockets\",\"adapter\",\"i\",\"err\",\"return\",\"_\",\"values\",\"event\",\"args\",\"emit\",\"namespace\",\"of\",\"to\",\"listener\",\"on\"],\"mappings\":\"sLAAqBA,aACnB,SAAAA,EAAYC,EAAQC,IAAQ,EAAAC,EAAAC,SAAAC,KAAAL,GAE1BK,KAAKC,GAAKA,GAAGL,EAAQC,EAAA,0EAWHK,GAClB,IAAKF,KAAKG,UAAW,MAAO,GAC5B,GAAID,EAAO,CACJE,MAAMC,QAAQH,KACjBA,EAAQ,CAACA,IAEX,IAAII,EAAU,GAJLC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAMT,IAAA,IAAAC,EAAAC,EAAmBV,EAAnBW,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA0B,CAAA,IAAjBU,EAAiBN,EAAAO,MACpBC,EAAOnB,KAAKC,GAAGmB,QAAQC,QAAQnB,MAAMe,GAEzC,GAAKE,GAASA,EAAKC,QAInB,IAAK,IAAIE,KAAKH,EAAKC,QACbpB,KAAKG,UAAUmB,KACjBhB,EAAQgB,GAAKtB,KAAKG,UAAUmB,KAfzB,MAAAC,GAAAf,GAAA,EAAAC,EAAAc,EAAA,QAAA,KAAAhB,GAAAK,EAAAY,QAAAZ,EAAAY,SAAA,QAAA,GAAAhB,EAAA,MAAAC,GAmBT,OAAOgB,EAAEC,OAAOpB,GAElB,OAAOmB,EAAEC,OAAO1B,KAAKG,wCAGlBwB,EAAOC,GACV,OAAO5B,KAAKC,GAAG4B,KAAKF,EAAOC,8BAG1BE,GACD,OAAO9B,KAAKC,GAAG8B,GAAGD,8BAGjBX,GACD,OAAOnB,KAAKC,GAAG+B,GAAGb,8BAGjBQ,EAAOM,GAER,OADAjC,KAAKC,GAAGiC,GAAGP,EAAOM,GACXjC,qCA/CP,OAAOA,KAAKC,GAAGmB,0CAIf,OAAOpB,KAAKoB,QAAQjB,6BAXHR\",\"sourcesContent\":[\"export default class Socket {\\n  constructor(server, config) {\\n    //server: http.server, config:KeyValuePair<any>\\n    this.io = io(server, config[\\\"options\\\"]);\\n  }\\n\\n  get sockets() {\\n    return this.io.sockets;\\n  }\\n\\n  get connected() {\\n    return this.sockets.connected;\\n  }\\n\\n  getConnectedClients(rooms) {\\n    if (!this.connected) return [];\\n    if (rooms) {\\n      if (!Array.isArray(rooms)) {\\n        rooms = [rooms];\\n      }\\n      let clients = {};\\n\\n      for (let roomId of rooms) {\\n        let room = this.io.sockets.adapter.rooms[roomId];\\n\\n        if (!room || !room.sockets) {\\n          continue;\\n        }\\n\\n        for (let i in room.sockets) {\\n          if (this.connected[i]) {\\n            clients[i] = this.connected[i];\\n          }\\n        }\\n      }\\n      return _.values(clients);\\n    }\\n    return _.values(this.connected);\\n  }\\n\\n  emit(event, args) {\\n    return this.io.emit(event, args);\\n  }\\n\\n  of(namespace) {\\n    return this.io.of(namespace);\\n  }\\n\\n  to(room) {\\n    return this.io.to(room);\\n  }\\n\\n  on(event, listener) {\\n    this.io.on(event, listener);\\n    return this;\\n  }\\n}\\n\\n// connect() {\\n//   var self = this;\\n//   if (self.socket) {\\n//     self.socket.destroy();\\n//     delete self.socket;\\n//     self.socket = null;\\n//   }\\n//   this.socket = io.connect(\\n//     \\\"http://127.0.0.1:3000\\\",\\n//     {\\n//       reconnection: true,\\n//       reconnectionDelay: 1000,\\n//       reconnectionDelayMax: 5000,\\n//       reconnectionAttempts: Infinity\\n//     }\\n//   );\\n//   this.socket.on(\\\"connect\\\", function() {\\n//     console.log(\\\"connected to server\\\");\\n//   });\\n//   this.socket.on(\\\"disconnect\\\", function() {\\n//     console.log(\\\"disconnected from server\\\");\\n//     window.setTimeout(\\\"app.connect()\\\", 5000);\\n//   });\\n// }\\n\"]}","code":"webpackHotUpdate(0,{44:function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=r(n(24)),i=r(n(25));function r(t){return t&&t.__esModule?t:{default:t}}var u=function(){function t(e,n){(0,o.default)(this,t),this.io=io(e,n.options)}return(0,i.default)(t,[{key:\"getConnectedClients\",value:function(t){if(!this.connected)return[];if(t){Array.isArray(t)||(t=[t]);var e={},n=!0,o=!1,i=void 0;try{for(var r,u=t[Symbol.iterator]();!(n=(r=u.next()).done);n=!0){var s=r.value,c=this.io.sockets.adapter.rooms[s];if(c&&c.sockets)for(var a in c.sockets)this.connected[a]&&(e[a]=this.connected[a])}}catch(t){o=!0,i=t}finally{try{!n&&u.return&&u.return()}finally{if(o)throw i}}return _.values(e)}return _.values(this.connected)}},{key:\"emit\",value:function(t,e){return this.io.emit(t,e)}},{key:\"of\",value:function(t){return this.io.of(t)}},{key:\"to\",value:function(t){return this.io.to(t)}},{key:\"on\",value:function(t,e){return this.io.on(t,e),this}},{key:\"sockets\",get:function(){return this.io.sockets}},{key:\"connected\",get:function(){return this.sockets.connected}}]),t}();e.default=u}});","extractedComments":[]}